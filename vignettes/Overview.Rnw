\documentclass[12pt]{article}
\usepackage{listings}
\begin{document}
\SweaveOpts{concordance=TRUE}

\section*{Installation}
To install the package:

<<Installing qmj>>=
#library(devtools)
#install_github("rynkwn/qmj")
@

\section*{Background}
qmj implements the results and methodology of the paper \emph{Quality Minus Junk} by Clifford Asness, Andrea Frazzini, Lasse Pedersen. In their paper, they use several measures to calculate the relative profitability, growth, safety, and payouts of a company, which they use to provide an overall quality score for a company.

This quality score is used to recommend which companies to buy and which to sell, by reasoning that quality companies are likely to outperform the market, while ``junk'' companies are likely to underperform relative to the market.

Here we use the equations and methods described in the paper, coupled with data taken from reputable online sources, in order to produce quality measurements for companies listed in the Russell 3000 Index.

\section*{Getting Started}
In order to start you off, qmj comes equipped with several data sets, including company information, financial statements, and daily stock data. To access them, call:

<<Package Datasets>>=
library(qmj)
data(companies) #Stores company names and tickers from the 
#Russell 3000 index
data(financials) #Stores financial documents for the given 
#list of companies.
data(prices) # Stores price returns and closing stock prices 
#for the past two years.
data(quality) #Stores the quality scores and the scores of 
#its components.
@
<<Package Datasets>>=
#And more detailed data sets into what makes up quality
data(profitability)
data(growth)
data(payouts)
data(safety)
@

Getting a quality data frame and a holistic summary of all its components can be done by calling

<<Getting Quality>>=
#market_data(companies, financials, prices)
@

If you're only interested in accessing certain quality factors, such as profitability, as well as what makes it up (such as gross profits over assets (GPOA), or cash flow over assets (CFOA)) call

<<Getting Only Some Quality Data>>=
#market_profitability(companies, financials)
@

\section*{Analyzing your Data}
The qmj package has stored a large number of qmj objects, which store significant amounts of information about a single company and which allows more in-depth analysis of that company. Some examples of analysis follow:
<<Getting and analyzing qmj objects>>=
data(qmjs)
first_qmj <- qmjs[[1]]
summarize(first_qmj) # Displays key information about this qmj object.

#We're clearly missing some interesting data, but we can still 
#perform some analysis.
data(safety)
@
<<fig=true>>=
plot_safety(first_qmj, safety)
@

<<Getting any analyzing qmj objects>>=
#Now let's look at a graph for quality.
data(quality)
second_qmj <- qmjs[[2]]
@
<<fig=true>>=
plot_quality(second_qmj, quality)
@

<<Getting any analyzing qmj objects>>=
#What if I'm only interested in looking closely at a few companies? 
#Well, voila.
desired_companies <- c("GOOG", "IBM", "FLWS")
#Returns a list containing the given qmj objects in order.
desired_qmjs <- get_qmjs(desired_companies, qmjs) 

summarize(desired_qmjs[[1]])
@

But the package also provides some tools for better examining your data en masse, as opposed to individual companies.

<<Other analysis tools>>=
#Let's look at the head of our quality data frame.
data(quality)
head(quality)

#Angies has an abnormally high growth score, which is very suspicious.
#Companies that are primarily driven by a single component score 
#are suspect, so let's filter out companies that are driven by growth.
sans_growth <- filter_companies(quality, filter="growth")
head(sans_growth)

#On the other hand, if we're interested in only companies that are 
#driven by growth, we can do the following:
driven_by_growth <- filter_companies(quality, filter="growth", remove=FALSE, isolate=TRUE)
head(driven_by_growth)

#We can also remove all companies with quality scores which are 
#primarily driven by any component.
#Notice that the remove parameter is by default TRUE, and 
#isolate is by default FALSE
liberal_arts_companies <- filter_companies(quality, filter="all")
head(liberal_arts_companies)
@


\section*{Updating your Data}
If you're interested in inputting your own data, you can generate financial statements for a data frame of companies as follows:

<<Updating your Data>>=
#companies #Your custom data frame of company names and tickers. 
#The column name for tickers must be "ticker"
@
<<Updating your Data>>=
#rawdata <- get_info(companies) #Retrieves raw financial 
#statements from google finance through the quantmod package.
@
<<Updating your Data>>=
#financials <- tidyinfo(rawdata) #Renders raw data in a format 
#usable by other functions in this package.
@

get\_info temporarily saves your progress to the extdata folder at all stages of its process, allowing you to resume your downloading if the process is interrupted for any reason.

\subsection*{Updating Prices}
Updating prices is a separate, lengthy process, and for that reason is separated from the other functions that automatically collect financial statements. To update prices, which is necessary for calculating safety measurements, call:

<<Updating Daily Data>>=
# rawprices <- get_prices(companies) #Retrieves stock price 
#data from Google Finance for listed companies for the past 
#two years. Also saves data from the S&P 500, retrieved from 
#Yahoo Finance.
@
<<Updating Daily Data>>=
# prices <- tidy_prices(rawprices) #Renders the raw data into 
#a form usable by other functions in this package.
@

The get\_prices function is able to save its progress as it temporarily saves its download data to the extdata folder in the package's folder.
\end{document}