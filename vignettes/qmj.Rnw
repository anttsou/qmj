\documentclass[a4paper]{report}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{RJournal}
\usepackage{amsmath,amssymb,array}
\usepackage{booktabs}
\usepackage{tabularx}
\usepackage{float}
\usepackage{Sweave}
\usepackage[parfill]{parskip}
\usepackage[round]{natbib}

%\VignetteEngine{Sweave}
%\VignetteIndexEntry{qmj}

\begin{document}
\SweaveOpts{concordance = FALSE}
%% do not edit, for illustration only
\sectionhead{Contributed research article}
\volume{XX}
\volnumber{YY}
\year{20ZZ}
\month{AAAA}

\begin{article}

\title{An Implementation of Quality Minus Junk}

\author{by Anthoney Tsou, Eugene Choe, David Kane, and Ryan Kwon}

\maketitle

\abstract{
The \strong{qmj} package provides tools to produce quality scores for companies from the Russell 3000 Index following the approach described in ``Quality Minus Junk'' by Clifford Asness et. al (2013). The package downloads necessary financial statement data and stock returns from Google Finance and Yahoo Finance to calculate these scores. The package has quality scores as of August 2015 in a precalculated data frame, allowing users to use the package as an overview of stocks in the Russell 3000 Universe. Users can also update these scores themselves by using the functions provided in the package.
}

\section{Introduction}

There is no single, widely accepted definition for the quality of a stock. MSCI defines quality as ``msci definition''. (Quality can also be loosely described as .... \citep{gray:2013}). In ``Quantitative Value'', quality is loosely described as...  In ``Quality Minus Junk'' \citep{asness:2013}\footnote{Hereafter referred to as AFP}, quality is defined as the average of the four scores representing profitability, growth, safety and payouts.

Each of the four characteristics is an average of the z-scores of the measures that comprises the characteristic. Profitability covers measures that aim understand earnings relative to the costs incurred. Growth measures the increase in a company's profits. Safety contains measures of risk in future returns. Payout considers how much of the profits goes to the shareholders.

\strong{qmj} considers the quality of stocks that belong to the Russell 3000. The Russell 3000 is an index that includes the 3000 largest US companies by market capitalization.  This universe was chosen due to the relative ease in obtaining the data necessary for quality score calculation from Google Finance and Yahoo Finance.

Using the necessary financial and stock data as of August 2015, \strong{qmj} provides a precalculated data frame of quality scores for the companies in the 2015 Russell 3000. This is convenient for those who primarily want to use the package for a quick overview of recent Russell 3000 quality scores. Users who want to regularly update the data themselves and recalculate the quality scores can do so by calling the same functions that were used to create the precalculated data frame.

\section{Data}
\subsection{Companies}
The Russell 3000 is an index that tracks 3000 of the largest US-traded companies by Market Capitalization\citep{russell:2015}. It is rebalanced anually in June. The package comes with a data frame called \code{companies} containing the members of 2015 index by name and ticker\footnote{from https://www.russell.com/documents/indexes/construction-methodology-us-indexes.pdf}.

Here is a sample of the first five companies in \code{companies}.

\begin{center}
<<echo = FALSE>>=
head(qmjdata::companies, n = 5)
@
\end{center}

For more information, see \code{?companies}.

\subsection{Financials}
The second dataset, \code{financials} contains the data from the balance sheets, income statements, and cash flows of companies that is necessary for quality score generation. This is gathered through functions that call \strong{quantmod} functions that get data from Google Finance and Yahoo Finance.

\code{financials} is long format data, so for each ticker, there are four rows corresponding to the past four fiscal years based on 10-K submission date. Since companies have different 10-K submission dates, the most recently gathered data may not include the financial information for the most current year. Thus, some companies will occasionally not have data for the past four years, but rather data with a one-year lag. 

Here is a sample of the first five companies in \code{financials}.

\begin{center}
<<echo = FALSE>>=
head(qmjdata::financials, n = 5)
@
\end{center}

For more information, see \code{?financials}. 

\begin{table}
  \caption{Columns in \code{financials}}
  \label{table:financials}
  \begin{tabularx}{\textwidth}{X X}
    \toprule
      Abbreviation & Name \\ 
    \midrule
      AM & Amortization \\ 
      CWC & Changes in Working Capital \\ 
      CX & Capital Expenditures \\ 
      DIVC & Dividends per Share \\ 
      DO & Discontinued Operations \\ 
      DP.DPL & Depreciation/Depletion \\ 
      GPROF & Gross Profits \\ 
      IAT & Income After Taxes \\ 
      IBT & Income Before Taxes \\ 
      NI & Net Income \\ 
      NINT & Interest and Expense \\ 
      NRPS & Non-redeemable Preferred Stock \\ 
      RPS & Redeemable Preferred Stock \\ 
      TA & Total Assets \\ 
      TCA & Total Current Assets \\ 
      TCL & Total Current Liabilities \\ 
      TCSO & Total Common Shares Outstanding \\
      TL & Total Liabilities  \\ 
      TLSE & Total Liabilities and Shareholder's Equity \\ 
      TREV & Total Revenue \\
    \bottomrule
  \end{tabularx}{\parfillskip=0pt\par}
\end{table}

\section{Calculating Quality}

We calculate quality z-scores for publicly traded companies in the Russell 3000 Index by summing the z-scores for each company's profitability, growth, safety, and payouts. 

\subsection{Profitability}
Profitability is a company's profits per unit of book value. It is composed of six variables: gross profits over assets ($GPOA$), return on equity ($ROE$), return on assets ($ROA$), cash flow over assets ($CFOA$), gross margin ($GMAR$), and accruals ($ACC$). $GPOA$ is calculated as gross profits ($GPROF$) over total assets ($TA$). $$GPOA \ = \ \frac{GPROF}{TA}$$ $ROE$ is calculated as net income ($NI$) over book equity ($BE$), which is shareholders' equity (the difference of Total Liabilities and Shareholders' Equity ($TLSE$) with Total Liabilities ($TL$)) - preferred stock (the sum of redeemable preferred stock ($RPS$) and non redeemable preferred stock ($NRPS$)). $$ROE \ = \ \frac{NI}{BE}$$ $ROA$ is calculated as $NI$ over $TA$. $$ROA \ = \ \frac{NI}{TA}$$ $CFOA$ is calculated as $NI$ + depreciation ($DP.DPL$) - changes in working capital ($CWC$) - capital expenditures ($CX$) all over $TA$. $$CFOA \ = \ \frac{NI \ + \ DP.DPL \ - \ CWC \ - \ CX}{TA}$$ $GMAR$ is calculated as $GPROF$ over total revenue ($TREV$). $$GMAR \ = \ \frac{GPROF}{TREV}$$ Finally, $ACC$ is calculated as $DP.DPL$ - $CWC$ all over $TA$. $$ACC \ = \ \frac{DP.DPL \ - \ CWC}{TA}$$ We then standardize all components of profitability to z-scores and then standardize all profitability scores into z-scores. $$Profitability \ = \ z(z_{gpoa} \ + \ z_{roe} \ + \ z_{roa} \ + \ z_{cfoa} \ + \ z_{gmar} \ + \ z_{acc})$$
\subsection{Growth}
Growth is a measure of a company's increase in profits. It is measured by differences in profitability across a time span of four years. Though AQR recommends measuring growth across a time span of five years, public information that is both consistent and well-organized in 10-K forms is only available for a time span of four years, and it is still too early in the most recent year (2015) for most companies to have submitted a 10-K form. Thus, we measure growth using a time span of four years, which we will update once this year's 10-K form is submitted for each company in the Russell 3000 Index. As of now, $$Growth \ = \ z(z_{\Delta gpoa_{t,t-4}} \ + \ z_{\Delta roe_{t,t-4}} \ + \ z_{\Delta roa_{t,t-4}} \ + \ z_{\Delta cfoa_{t,t-4}} \ + \ z_{\Delta gmar_{t,t-4}} \ + \ z_{\Delta acc_{t,t-4}})$$
\subsection{Safety}
Safety is a measure of required return, with safer stocks having a lower required return. Safety is composed of six variables: beta ($BAB$), idiosyncratic volatility ($IVOL$), leverage ($LEV$), Ohlson's O ($O$), Altman's Z ($Z$), and earnings volatility ($EVOL$). $BAB$ is calculated as the negative covariance of each company's daily price returns ($pret_{c_i}$) relative to the benchmark daily market price returns ($pret_{mkt}$), in this case the S\&P 500, over the variance of $pret_{mkt}$. $$BAB \ = \ \frac{-cov(pret_{c_i},pret_{mkt})}{var(pret_{mkt})}$$ $IVOL$ is the standard deviation of daily beta-adjusted excess returns. In other words, $IVOL$ is found by running a regression on each company's price returns and the benchmark, then taking the standard deviation of the residuals. Leverage is -(total debt ($TD$) over $TA$). $$Leverage \ = \ -\frac{TD}{TA}$$ 
\\

\begin{equation}
\begin{aligned}
O \ = \ - \Biggl[-1.32 \ - \ 0.407 \ * \ log\left(\frac{ADJASSET}{CPI}\right) \ + \ 6.03 \ * \ TLTA \ - \ 1.43 \ * \ WCTA 
\notag\\
 + \ 0.076 \ * \ CLCA \ - \ 1.72 \ * \ OENEG \ - \ 2.37 \ * \ NITA \ - \ 1.83 \ * \ FUTL 
 \notag\\
 + \ 0.285 \ * \ INTWO \ - \ 0.521 \ * \ CHIN \Biggr] 
\end{aligned}
\end{equation}

$ADJASSET$ is adjusted total assets, which is $TA$ + 0.1 * (market equity ($ME$, calculated as average price per share for the most recent year * total number of shares outstanding ($TCSO$) - $BE$)). $$ADJASSET \ = \ TA \ + \ 0.1 \ * \ (ME \ - \ BE)$$ $CPI$, the consumer price index, is assumed to be 100, since we only care about the most recent year. $TLTA$ is book value of debt ($BD$, calculated as $TD$ - minority interest ($MI$) - ($RPS$ + $NRPS$)) over $ADJASSET$. $$TLTA \ = \ \frac{BD}{ADJASSET}$$ $WCTA$ is current assets ($TCA$) - current liabilities ($TCL$) over $TA$. $$WCTA \ = \ \frac{TCA - TCL}{TA}$$ $CLCA$ is $TCL$ over $TCA$. $$ CLCA \ = \ \frac{TCL}{TCA}$$ $OENEG$ is a dummy variable that is 1 if total liabilities ($TL$) is greater than $TA$. $$ OENEG \ = \ TL > TA $$ $NITA$ is $NI$ over $TA$. $$NITA \ = \ \frac{NI}{TA}$$ $FUTL$ is income before taxes ($IBT$) over $TL$. $$FUTL \ = \ \frac{IBT}{TL}$$ $INTWO$ is another dummy variable that is 1 if $NI$ for the current year and $NI$ for the previous year are both negative. $$INTWO \ = \ MAX(NI_t,NI_{t-1}) < 0$$ $CHIN$ is $NI$ for the current year - $NI$ for the previous year all over the sum of the absolute value of $NI$ for the current year and the absolute value of $NI$ for the previous year $$CHIN \ = \ \frac{NI_t \ - \ NI_{t-1}}{|NI_t| + |NI_{t-1}|}$$ Altman's Z is calculated using weighted averages of working capital ($WC$, calculated as $TCA$ - $TCL$), $$WC \ = \ TCA \ - \ TCL$$ retained earnings ($RE$, calculated as $NI$ - dividends per share ($DIVC$) * $TCSO$), $$RE \ = \ NI \ - \ DIVC \ * \ TCSO$$ earnings before interest and taxes ($EBIT$, calculated as $NI$ - Discontinued Operations ($DO$) + (income before tax ($IBT$) - income after tax ($IAT$)) + interest expense ($NINT$)), $$ EBIT \ = \ NI \ - \ DO \ + \ (IBT \ - \ IAT) \ + \ NINT $$ $ME$, and $TREV$, all over $TA$. $$Z \ = \frac{\ 1.2 \ * \ WC \ + \ 1.4 \ * \ RE \ + \ 3.3 \ * \ EBIT \ + \ 0.6 \ * \ ME \ + TREV}{TA}$$ $EBIT$ is likely an overestimate for a given company due to potentially missing information. $EVOL$ is calculated as the standard deviation of $ROE$ for a four year span. AQR recommends the past five years, but for the same reason stated in the Growth section, we use a four year span. $$EVOL = \sigma\left(\sum_{i=t-4}^{t}ROE_i\right)$$ Likewise, we standardize each variable and then standardize each safety measure, so $$Safety \ = \ z(z_{bab} \ + \ z_{ivol} \ + \ z_{lev} \ + \ z_{o} \ + \ z_{z} \ + \ z_{evol})$$ 
\subsection{Payouts}
Payouts measures the proportion of profits paid to shareholders. It is composed of three variables: net equity issuance ($EISS$), net debt issuance ($DISS$), and total net payout over profits ($NPOP$). $EISS$ is calculated as the negative log of the ratio of $TCSO$ of the most recent year and $TCSO$ of the previous year. $$EISS \ = \ -log\left(\frac{TCSO_t}{TCSO_{t-1}}\right)$$ Though AQR uses split-adjusted number of shares, we are currently using $TCSO$ given available information and will adjust for splits in future iterations of qmj. $DISS$ is calculated as the negative log of the ratio of $TD$ of the most recent year and $TD$ of the previous year. $$DISS \ = \ -log\left(\frac{TD_t}{TD_{t-1}}\right)$$ $NPOP$ is calculated as $NI$ - $\Delta BE$ over a four year span all over sum of $GPROF$ for the past four years (for the same reason as explained in the Growth section). $$NPOP \ = \ \frac{NI - \Delta BE}{\sum_{i=t-4}^{t}GPROF_i}$$


\section{Data}
The \strong{qmj} package comes pre-compiled with data, including a universe comprised of all companies in the Russell 3000 Index along with each companies financials, daily closing prices and returns, and quality scores. The Russell 3000 Index is a list of the 3000 largest US companies, according to market cap, updated annually around May or June. We do not analyze companies outside the scope of the Russell 3000 Index in order to prevent potential problems with limited financial information for small companies as well as anomalies that could skew our measurements for quality. For example, Gross Profits over Assets (GPOA) could double for a tiny company due to a small absolute change in profit, dramatically increasing the growth measurement for that company. We thus wish to focus on companies with reasonably large market cap to have the best possible quality comparisons. For each dataset, see \code{?dataset} for more information each of its variables. For example, for the dataset \code{companies}, use \code{?companies}.

\subsection{companies}
  The first dataset of the package contains the companies we wish to study, ordered alphabetically by ticker. Here is a sample of the first five companies.

\begin{center}
<<echo = FALSE>>=
head(qmjdata::companies, n = 5)
@
\end{center}

The \code{companies} dataset maps each company's ticker to its name. For example, Alcoa Inc. has the ticker AA. This sample of companies uses the 2014 Russell 3000 Index, which only contains 2999 companies. 

\subsection{financials}
  The second dataset, \code{financials}, which is composed of data from the balance sheets, income statements, and cash flows of companies. The columns are filtered so only the relevant measurements such as net income are present in the dataset. \code{companies} is the baseline dataset by providing tickers for other datasets in the package.

<<echo = FALSE>>=
quality_scores <- qmjdata::quality
quality_scores[-which(colnames(quality_scores) %in% c("ticker", "name"))] <-
  round(quality_scores[-which(colnames(quality_scores) %in% c("ticker", "name"))], 
        digits = 3)

@
\begin{center}
<<echo = FALSE>>=
head(qmjdata::financials, n = 8)
@
\end{center}

Every company is allocated four rows, each row representing the financial data for the company for a particular year. Organizing the data in this way allows users to easily see the change in variables affecting each company's financial status over time. For example, consider the company with ticker A. It has nearly a 20\% increase in total assets, but it also has nearly a 50\% decrease in net income from 2011 to 2014.

\subsection{prices}
  The \code{prices} dataset has the closing stock prices and price returns for each day of the past two years for each company. 
  
\begin{center}
<<echo = FALSE>>=
rbind(head(qmjdata::prices, n = 5),
      qmjdata::prices[1050:1054,])
@
\end{center}

In the sample above, we have data for the company with ticker SRCE as well as the S \& P 500 (ticker GSPC), or the market. For every company in the dataset, we have the daily price return (pret) and closing price (close), and we compare these values to those of the market to see if the company outperforms or underperformsthe market. The S \& P 500 is the benchmark we use in our calculations of beta and idiosyncratic volatility for our safety score. If we directly compare price returns, it appears that SRCE underperforms the market for every day in our sample of five consecutive business days. 

\subsection{quality}
  Finally, we have the main dataset, \code{quality}, which contains the quality scores for each company as well as the four main components measuring profitability, growth, safety, and payouts z-scores. 
  
\begin{center}
<<echo = FALSE>>=
rbind(head(quality_scores, n = 5),
      rbind(quality_scores[quality_scores$ticker == "SRCE",],
            quality_scores[quality_scores$ticker == "AA",]))
@
\end{center}

Here we have an example showing the top five companies based on quality measurements. We also have two companies we have seen before in our samples of other datasets. For the company with ticker SRCE, we note that the quality score is not very high. Though we cannot just extrapolate from our sample size of five, it makes sense for SRCE to have a low quality score if it continues to underperform the market every day, which we can verify if we look compare the price returns on more days from the \code{prices} dataset. AA has an even lower quality score, which is understandable from its poor financial records. Most notably, the values for its total assets, net income, income after taxes, income before taxes all decline significantly in a span of four years. 

\subsection{Updating Data}

Though \strong{qmj} updates its datasets periodically, it has a few functions that can extract information directly from Google Finance to grab the most recent data for users to utilize in their own datasets. 

<<echo = FALSE>>=
#raw_prices <- get_prices(companies)
#raw_data <- get_info(companies)
@

\strong{get\_prices()} takes a data frame of companies, organized by name and ticker, and returns the daily prices and returns for the past two years including the most recent trading day. \strong{get\_info()} also takes a data frame of companies, organized by name and ticker, and grabs the most recent company 10-K financial statements. Thus, \strong{get\_info()} does not need to be called often since it will only grab new data once per year. Both functions will return a data frame that can be organized easily. An easy way to make the data more readable is through tidy functions in the \strong{qmj} package. 

<<echo = FALSE>>=
#clean_prices <- tidy_prices(raw_prices)
#clean_data <- tidyinfo(raw_data)
@

\strong{tidy\_prices()} takes as input the result of \strong{get\_prices()}, which is assigned here as \strong{raw\_prices}, and organizes the data into columns for ticker, date, price, and price return. \strong{tidyinfo()} takes as input the result of \strong{get\_info()}, which is assigned here as \strong{raw\_data}, and organizes the data into columns for ticker, year, and various items found in company financial statements such as total assets and net income. The column names themselves are abbreviations that are used in the Calculating Quality section. 

\section{Analyzing the Universe (Of Companies)}
In the quality data set, it can quickly be seen that the growth score for Angies List Inc. is abnormally high, and accounts for virtually all of its quality score. In many cases, it is undesirable to consider companies with high quality scores that are ``driven'' (here defined as composing at least half of the quality score) by a single component score. \strong{qmj} provides a filter.
\begin{center}
<<echo = FALSE>>=
head(quality_scores)

# sans_growth <- filter_companies(quality, filter="growth")
# head(sans_growth)
@
\end{center}
As shown above, companies with excessively high growth scores compared to their other component scores, including ANGI, have been filtered out. If desirable, we may also choose to isolate companies that are driven by a particular component, or whitelist, rather than to remove, or blacklist them. \code{remove} and \code{isolate} are boolean parameters that specify whether the user wishes to blacklist or whitelist, with \code{remove} being TRUE and \code{isolate} being FALSE by default.

\begin{center}
<<echo = FALSE>>=
# cpayouts <- filter_companies(quality, filter="payouts", remove=FALSE, isolate=TRUE)
# head(cpayouts)
@
\end{center}
As we can see above, now that \code{isolate} is TRUE, we are left with only the companies that have excessively high payouts scores compared to their other component scores. We can also select for all companies that are not driven by any component score. 

\begin{center}
<<echo = FALSE>>=
# well_rounded <- filter_companies(quality, filter="all")
# head(well_rounded)
@
\end{center}
We are left with only the companies that do not have single outstanding component scores. It may also be desirable to look at quality scores specific to a subset of our extant universe. 


\begin{center}
<<echo = FALSE>>=
subset_companies <- qmjdata::companies[1:35,]
subset_qualities <- qmj::market_data(subset_companies, qmjdata::financials, qmjdata::prices)
subset_qualities[-which(colnames(subset_qualities) %in% c("ticker", "name"))] <-
  round(subset_qualities[-which(colnames(subset_qualities) %in% c("ticker", "name"))], 
        digits = 3)
head(subset_qualities)
@
\end{center}

This very simple example only grabs the first 35 companies of the Russell 3000 Index and demonstrates that our functions can calculate quality scores for customized data sets as well. For example, a user may wish to focus on a specific industry, instead of the entire market, and see the relative quality scores for just that subsection.

\section{Conclusion}

In the \strong{qmj} package, we automate AQR's method of assigning quality scores for publicly traded companies in today's market. The package itself provides convenient datasets and utility functions, and it also takes advantage of R's robust nature to allow seamless interaction with functions in the base R package and other packages.

\bibliography{tsou-kane-kwon}

\address{Anthoney Tsou\\
      Williams College\\
      2460 Paresky Center\\
      Williamstown, MA 01267\\
      United States}\\
\email{anttsou@gmail.com}

\address{David Kane\\
   Williams College\\
   Williamstown, MA 01267\\
   United States}\\
\email{dave.kane@gmail.com}

\address{Ryan Kwon\\
  Williams College\\
  1309 Paresky Center\\
  Williamstown, MA 01267\\
  United States}\\
\email{rynkwn@gmail.com}
\end{article}
\end{document}