mean(animaldata$Age.Intake)
median(animaldata$Age.Intake)
sd(animaldata$Age.Intake)
fivenum(animaldata$Age.Intake)
View(animaldata)
head(animaldata)
table(animaldata$Gender)
table(animaldata$Sex)
plot(animaldata$Sex)
plot(animaldata$Sex, main='Bar Chart')
plot(animaldata$Sex, main='Bar Chart',xlab='Animal Gender', ylab='Number')
hist(animaldata$Age.Intake)
femaleage <- animaldata$Age.Intake[animaldata$Sex == 'Female']
maleage <- animaldata$Age.Intake[animaldata$Sex == 'Male']
hist(femaleage, main='Histogram of Female Ages')
hist(maleage, main = 'Histogram of Male Ages')
hist(maleage, main = 'Histogram of Male Ages',breaks=5)
hist(maleage, main = 'Histogram of Male Ages',breaks=15)
hist(maleage, main = 'Histogram of Male Ages',breaks=1)
hist(maleage, main = 'Histogram of Male Ages',breaks=15)
max(maleage)
max(femaleage)
which(animaldata$Age.Intake==17)
animaldata[415,]
head(animaldata, n=10)
first(animaldata$Neutered.Status[animaldata$Intake.Type == 'Owner Surrender'])
animaldata$Neutered.Status[animaldata$Intake.Type == 'Owner Surrender'][1]
animaldata$Neutered.Status[animaldata$Intake.Type == 'Owner Surrender']
#Find the number of animals that were adopted
table(animaldata$Outcome.Type)
#Pull out only adopted animals
adopted <- animaldata[animaldata$Outcome.Type=="Adoption",]
#Pull out just the days in shelter for the adopted animals
daystoadopt <- adopted$Days.Shelter
#Visualize and describe this variable
hist(daystoadopt)
fivenum(daystoadopt)
mean(daystoadopt)
sd(daystoadopt)
which(animaldata$Days.Shelter==max(daystoadopt))
211/35.71547
(211-29.26471)/35.71547
animaldata[425,]
table(animaldata$Animal.Type)
adults <- animals$Weight[animals$Age >= 1]
adultdog <- animaldata$Weight[animaldata$Age >= 1, animaldata$Animal.Type == 'Dog']
adultdog <- animaldata$Weight[animaldata$Age >= 1 && animaldata$Animal.Type == 'Dog']
adultcat <- animaldata$Weight[animaldata$Age >= 1 && animaldata$Animal.Type == 'Cat']
hist(adultdog)
hist(adultcat)
hist(adultcat)
animals <- table(animaldata$Animal.Type[animaldata$Age >= 1])
animals
adultcat <- animaldata$Weight[animaldata$Age >= 1 && animaldata$Animal.Type == 'Cat']
hist(adultcat)
hist(adultcat, breaks=10)
adultcat
adultdog
adultdog <- animaldata$Weight[animaldata$Age.Intake >= 1 && animaldata$Animal.Type == 'Dog']
adultcat <- animaldata$Weight[animaldata$Age.Intake >= 1 && animaldata$Animal.Type == 'Cat']
hist(adultdog)
hist(adultcat)
adultdog <- animaldata$Weight[animaldata$Age.Intake >= 1 & animaldata$Animal.Type == 'Dog']
adultcat <- animaldata$Weight[animaldata$Age.Intake >= 1 & animaldata$Animal.Type == 'Cat']
hist(adultdog)
hist(adultcat)
hist(adultdog)
hist(adultcat)
mean(adultcat)
sd(adultcat)
(13-8.603571)/1.911517
1-pnorm(2.299969)
fivenum(adultdog)
8.6 - (2 * 1.9)
8.6 - (3 * 1.9)
8.6 + (2 * 1.9)
fivenum(adultcat)
table(animaldata$Intake.Type)
table(animaldata$Intake.Type[animaldata$Animal.Type == 'Dog'])
81/(1 + 81 + 20 + 189)
table(animaldata$Outcome.Type[animaldata$Animal.Type == 'Dog' & animaldata$Intake.Type == 'Owner Surrender'])
mean(animaldata$Animal.Type == 'Dog' & animaldata$Intake.Type == 'Owner Surrender' & animaldata$Outcome.Type == 'Return to Owner')
animaldata$Animal.Type == 'Dog' & animaldata$Intake.Type == 'Owner Surrender' & animaldata$Outcome.Type == 'Return to Owner'
mean(animaldata$Days.Shelter[animaldata$Animal.Type == 'Dog' & animaldata$Intake.Type == 'Owner Surrender' & animaldata$Outcome.Type == 'Return to Owner'])
library(SDSFoundations)
bull <- BullRiders
View(bull)
plot(bull$YearsPro, bull$BuckOuts)
plot(bull$YearsPro, bull$BuckOuts, xlab='Years Pro', ylab='Buck Outs', main='Buck Outs vs Years Pro')
abline(lm(bull$BuckOuts~bull$YearsPro))
plot(bull$Events, bull$BuckOuts)
abline(lm(bull$BuckOuts~bull$YearsPro))
abline(lm(bull$Buckouts~bull$Events))
abline(lm(bull$Buckouts~bull$Events))
plot(bull$Events, bull$BuckOuts)
abline(lm(bull$Buckouts~bull$Events))
abline(lm(bull$Buckouts~bull$Events))
abline(lm(bull$BuckOuts~bull$Events))
cor(bull$YearsPro, bull$BuckOuts)
cor(bull$Events, bull$BuckOuts)
cor(bull$Events, bull$BuckOuts)^2
cor(bull$Events, bull$BuckOuts)
myvars <- c("Years Pro", "Events", "BuckOuts")
cor(bull[, myvars])
myvars <- c("Years Pro", "Events", "BuckOuts")
cor(bull[, myvars])
cor(bull[,myvars])
myvars <- c("YearsPro", "Events", "BuckOuts")
cor(bull[,myvars])
plot(bull)
histo(bull)
plot(bull$Events, bull$YearsPro)
40 + 22 + 19 + 45 + 10 + 12
32/148
(40+22+19)/148
10/(10+ 12 + 45)
40/45
40/85
40/(40 + 22 + 19)
(40+22+19)/148
10/(148)
40/85
40/(40 + 22 + 19)
(45+10+12)/148
45/148
.304/(.453)
library(SDSFoundations)
acl <- AustinCityLimits
acl
table(acl$Grammy)
View(acl)
gtab <- table(acl$Grammy)
prop.table(gtab)
gtab2 <- table(acl$Grammy, acl$Gender)
gtab2
prop.table(gtab2)
prop.table(gtab2, 1)
prop.table(gtab2, 2)
prop.table(gtab2, 1)
barplot(acl$Grammy)
barplot(gtab)
barplot(gtab2)
#main, xlab, ylab
barplot(gtab2,legend=true)
barplot(gtab2,legend=t)
barplot(gtab2,legend='T')
barplot(gtab2,legend=T)
barplot(gtab2,main='Gender by Grammy Winner', beside=T, legend=T)
barplot(prop.table(gtab2,2))
barplot(prop.table(gtab2,1), legend=T, beside=T)
head(acl, 10)
table(head(acl$Grammy, 10)
table(head(acl$Grammy, 10))
head(acl$Grammy, 10)
table(acl$Grammy)
table(head(acl$Grammy, 10))
head(acl$Genre[acl$Age > 60])
head(acl$Genre[acl$Age > 60], 1)
genre <- table(acl$Genre)
genre
gender <- table(acl$Gender)
gender
# Create contingency table
twoway <- table (acl$Gender,acl$Genre)
twoway
# Visualize the counts
barplot(twoway, legend=T, beside=T)
# Calculate P(A): the probability of each genre being played
prop.table(genre)
# Calculate P(A|B): the probability of each genre being played, given the artistâ€™s gender
prop.table(twoway,1)
gender
genre
twoway
prop.table(twoway,1)
prop.table(genre)
prop.table(twoway,1)
prop.table(genre)
barplot(twoway, legend=T, beside=T)
table(acl$Genre, acl$Grammy)
t1 <- table(acl$Genre, acl$Grammy)
table(acl$Grammy)
49/67
49/(67+49)
prop.table(t1)
prop.table(t1, 1)
prop.table(t1, 2)
prop.table(t1, 1)
prop.table(genre)
prop.table(acl$Grammy)
prop.table(table(acl$Grammy)
prop.table(table(acl$Grammy))
table(acl$Grammy)
prop.table(table(acl$Grammy))
prop.table(t1,1)
library(SDSFoundations)
wr <- WorldRecords
wr
linFit(wr$Year, wr$Gender)
mens800 <- wr(wr$Event == 'Mens 800m')
mens800 <- wr[wr$Event == 'Mens 800m']
View(wr)
mens800 <- wr[wr$Event == 'Mens 800m']
mens800 <- wr[wr$Event == 'Mens 800m',]
linFit(mens800$Year, mens800$Record)
library(SDSFoundations)
wb <- WorldBank
wb <- WorldBankData
View(wb)
ukwb <- wb[wb$Country.Code == 'GBR',]
ukwb
gbr2000 <- ukwb[gb$year >= 2000 & gb$year < 2010]
gbr2000 <- ukwb[ukwb$year >= 2000 & ukwb$year < 2010]
gbr2000 <- ukwb[ukwb$year >= 2000 & ukwb$year < 2010,]
time <- gbr2000 - 2000
time <- gbr2000$year - 2000
time
mv <- gbr2000$Motor.vehicles
plot(time, mv)
mv
mv <- gbr2000$motor.vehicles
plot(time, mv)
expFit(time, mv)
logisticFit(time, mv)
tripleFit(time, mv)
linFit(time, mv)
logisticFit(time, mv)
tripleFit(time, mv)
expFitPred(time, mv, 5000000000)
expFitPred(time, mv, 500000)
expFitPred(time, mv, 50)
expFitPred(time, mv, 5)
expFitPred(time, mv, 10)
logisticFitPred(time, mv, 10)
expFitPred(time, mv, 10)
logisticFitPred(time, mv, 10)
library(SDSFoundations)
survey <- StudentSurvey
View(survey)
mean(survey$Age)
mean(survey$age)
sd(survey$age)
plot(survey$age)
barplot(survey$age)
hist(survey$age)
sample(survey$age, 10)
hist(sample(survey$age, 20))
hist(sample(survey$age, 40))
hist(sample(survey$age, 40))
hist(sample(survey$age, 40))
hist(sample(survey$age, 40))
hist(sample(survey$age, 40))
hist(sample(survey$age, 40))
hist(sample(survey$age, 40))
hist(sample(survey$age, 40))
hist(sample(survey$age, 40))
hist(sample(survey$age, 40))
hist(sample(survey$age,size=40))
hist(sample(survey$age,size=40))
hist(sample(survey$age,size=40))
hist(sample(survey$age,size=40))
hist(sample(survey$age,size=40))
sample(survey$age, size=40)
myxbar <- rep(NA, 1000)
myxbar[i] <- mean(mysamp)
myxbar <- rep(NA, 1000)
for (i in 1:1000){
mysamp <- sample(survey$age, size=30)
myxbar[i] <- mean(mysamp)
}
hist(myxbar)
myxbar <- rep(NA, 1000)
for (i in 1:1000){
mysamp <- sample(survey$age, size=90)
myxbar[i] <- mean(mysamp)
}
hist(myxbar)
mean(myxbar)
sd(myxbar)
sd(survey$age/(sqrt(90)))
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "a1078d4fb7a6e0a2a702", "MISSING SECRET")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
install.packages("httpuv")
install.packages("httpuv")
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "a1078d4fb7a6e0a2a702", "MISSING SECRET")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", "a1078d4fb7a6e0a2a702", "MISSING SECRET")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
?Sys.setenv
Sys.setenv(GITHUB_CONSUMER_SECRET = "3cebe5f47ec94817aedbbed51b0227a3b8c6916a")
oauth_endpoints("github")
myapp <- oauth_app("github", client_id, "MISSING SECRET")
client_id = "a1078d4fb7a6e0a2a702"
Sys.setenv(GITHUB_CONSUMER_SECRET = "3cebe5f47ec94817aedbbed51b0227a3b8c6916a")
oauth_endpoints("github")
myapp <- oauth_app("github", client_id, "MISSING SECRET")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
client_id = "a1078d4fb7a6e0a2a702"
library(httr)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", client_id, "MISSING SECRET")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("github")
myapp <- oauth_app("github", client_id, "3cebe5f47ec94817aedbbed51b0227a3b8c6916a")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
dat <- content(req)
dat
names(dat)
dat[[1]]
names(dat[[1]])
dat[[1]]$created_at
install.packages("sqldf")
fileUrl <- ""
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
dest <- paste(getwd(), "sql.csv", sep='')
file.download(fileUrl, dest)
?download.file
download.file(fileUrl, destfile <- dest)
dest <- paste(getwd(), "\sql.csv", sep='')
download.file(fileUrl, destfile <- dest)
dest <- paste(getwd(), "/sql.csv", sep='')
download.file(fileUrl, destfile <- dest)
getwd()
r
R
?version
R.Version()
c1 <- download.files("http://www.bloomberg.com/quote/GMEXICOB:MM")
c1 <- "http://www.bloomberg.com/quote/GMEXICOB:MM"
c1Name <- "GMEXICOB:MM"
?download_file
?file_download
?
library
library("bitops", lib.loc="~/R/win-library/3.1")
detach("package:bitops", unload=TRUE)
library("tools", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("utils", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("stats", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("spatial", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("parallel", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("MASS", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("graphics", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("foreign", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("ws.data", lib.loc="~/R/win-library/3.1")
library("sqldf", lib.loc="~/R/win-library/3.1")
library("SDSFoundations", lib.loc="~/R/win-library/3.1")
library("rstudio", lib.loc="~/R/win-library/3.1")
?download_file
?file_download
library("bitops", lib.loc="~/R/win-library/3.1")
library("chron", lib.loc="~/R/win-library/3.1")
library("data.table", lib.loc="~/R/win-library/3.1")
library("digest", lib.loc="~/R/win-library/3.1")
library("hash", lib.loc="~/R/win-library/3.1")
library("httpuv", lib.loc="~/R/win-library/3.1")
library("httr", lib.loc="~/R/win-library/3.1")
library("jpeg", lib.loc="~/R/win-library/3.1")
library("jsonlite", lib.loc="~/R/win-library/3.1")
library("manipulate", lib.loc="~/R/win-library/3.1")
library("mime", lib.loc="~/R/win-library/3.1")
library("orderbook", lib.loc="~/R/win-library/3.1")
library("plyr", lib.loc="~/R/win-library/3.1")
library("R6", lib.loc="~/R/win-library/3.1")
library("Rcpp", lib.loc="~/R/win-library/3.1")
library("RCurl", lib.loc="~/R/win-library/3.1")
library("reshape2", lib.loc="~/R/win-library/3.1")
library("rJava", lib.loc="~/R/win-library/3.1")
library("stringr", lib.loc="~/R/win-library/3.1")
library("swirl", lib.loc="~/R/win-library/3.1")
library("testthat", lib.loc="~/R/win-library/3.1")
library("xlsx", lib.loc="~/R/win-library/3.1")
library("XML", lib.loc="~/R/win-library/3.1")
library("yaml", lib.loc="~/R/win-library/3.1")
library("boot", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.1.2/library")
detach("package:KernSmooth", unload=TRUE)
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("grDevices", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("class", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("cluster", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("codetools", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("compiler", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("datasets", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("Matrix", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("methods", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("mgcv", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("nlme", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("nnet", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("rpart", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("splines", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("stats4", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("survival", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("tcltk", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("translations", lib.loc="C:/Program Files/R/R-3.1.2/library")
?download_file
?file_download
library(utils)
?download_file
?file_download
?character
getwd()
setwd("econ20")
setwd("R Paper")
setwd("Discrete")
source("R/getdailydata.R")
source("R/getcompanies.R")
getdailydata(getcompanies())
data <- getcompanies()
getdailydata(data)
source("R/getdailydata.R")
getdailydata(data)
print(companyTicker)
getdailydata <- function(x){
##x is a dataframe containing a list of companies.
##Requires quantmod package
##getdailydata is meant to be used only when desiring to retrieve
### data from the web.
if(!require("quantmod")){
stop("quantmod package missing for function getdailydata() in package qmj")
} else{
numCompanies <- length(x$tickers)
for(i in 1:numCompanies){
companyTicker <- as.character(x$ticker[i])
print(companyTicker)
stockData <- tryCatch(
quantmod::getSymbols(companyTicker, src="google", auto.assign=FALSE),
error=function(e) e
)
if(!inherits(stockData, "error")){
fileName <- paste("/data/", companyTicker, ".csv", sep='')
write.zoo(stockData, file = fileName, sep=",")
}
}
}
}
getdailydata(data)
getdailydata <- function(x){
##x is a dataframe containing a list of companies.
##Requires quantmod package
##getdailydata is meant to be used only when desiring to retrieve
### data from the web.
if(!require("quantmod")){
stop("quantmod package missing for function getdailydata() in package qmj")
} else{
numCompanies <- length(x$tickers)
for(i in 1:numCompanies){
companyTicker <- as.character(x$ticker[i])
stockData <- tryCatch(
quantmod::getSymbols(companyTicker, src="google", auto.assign=FALSE),
error=function(e) e
)
if(!inherits(stockData, "error")){
fileName <- paste("data/", companyTicker, ".csv", sep='')
write.zoo(stockData, file = fileName, sep=",")
}
}
}
}
getdailydata(data)
View(data)
View(data)
library(stringr)
View(data)
data["google" %in% data$names]
data[data$names == "google.inc"]
data[data$ticker == "GOOG"]
data[data$ticker == "GOOG",]
data[3417]
data[3417,]
getwd()
setwd("data")
getwd()
alsk <- read.csv("alsk.csv")
plot(alsk$Index, alsk$ALSK.OPEN)
plot(alsk$Index, alsk$ALSK.HIGH)
hist(alsk$ALSK.HIGH)
high(as.numeric(alsk$ALSK.HIGH))
hist(as.numeric(alsk$ALSK.HIGH))
