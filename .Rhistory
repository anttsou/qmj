#ROA
#Net income / Total assets
# Net income - CF
# Total assets - BS
ROA[i] = cCF[2]/cBS[18]
#CFOA
#(net income + depreciation - (change in working capital) - capital expenditures)/(total assets)
# Net income - CF
# Depreciation - IS
# Change in working capital - CF
# Capital Expenditures - CF
# Total assets - BS
CFOA[i] = (cCF[2] + cIS[9] - cCF[7] - cCF[9])/cBS[18]
#GMAR
# (Revenue - costs of goods sold)/(total sales)
# = Gross profit/(total sales)
#?# Using different equation:
# Gross profit/ (Total revenue)
#Gross profit - IS
#Total Revenue - IS
GMAR[i] = cIS[6]/cIS[4]
#ACC
# (depreciation - changes in working capital)/(total assets)
#*# Going from equation they show. Slight difference from their own
## words.
# Depreciation - CF
# Changes in working capital - CF
# Total assets - BS
ACC[i] = (cIS[9] - cCF[7])/cBS[18]
}
#Scale converts the individual scores for these values into z-scores.
GPOA <- scale(GPOA)
ROE <- scale(ROE)
ROA <- scale(ROA)
CFOA <- scale(CFOA)
GMAR <- scale(GMAR)
ACC <- scale(ACC)
GPOA[is.nan(GPOA)] <- 0
ROE[is.nan(ROE)] <- 0
ROA[is.nan(ROA)] <- 0
CFOA[is.nan(CFOA)] <- 0
GMAR[is.nan(GMAR)] <- 0
ACC[is.nan(ACC)] <- 0
for(i in 1:numCompanies){
profitability[i] <- GPOA[i] + ROE[i] + ROA[i] + CFOA[i] + GMAR[i] + ACC[i]
}
scale(profitability)
}
ls
setwd("econ20/R Paper/Discrete")
test <- collectmarketdata()
collectmarketdata()
collectmarketdata <- function(){
##Collect market data focuses on collecting needed
##  means and sd's for use in other functions.
#We need:
# gross profits over assets (GPOA)
# Return on equity (ROE)
# return on assets (ROA)
# Cash flow over assets (GPOA)
# Gross margin (GMAR)
# Fraction of earnings composed of cash
#   i.e., low accruals, ACC
companies <- read.csv("data/companies.csv")
numCompanies <- length(companies$tickers)
BS <- read.csv("data/balancesheets.csv")
CF <- read.csv("data/cashflows.csv")
IS <- read.csv("data/incomestatements.csv")
#What to do with missing data?
# If we're missing a lot of data, then simply assigning 0's skews
# the mean and SD. However, short term solution to getting a result.
BS[is.na(BS)] <- 0
CF[is.na(CF)] <- 0
IS[is.na(IS)] <- 0
print("TEST")
profitability <- collectmarketprofitability(companies, BS, CF, IS)
growth <- collectmarketgrowth(companies, BS, CF, IS)
safety <- rep(0, numCompanies)
payouts <- collectmarketpayout(companies, BS, CF, IS)
###SAFETY
#BAB
# - market beta
# Use PerformanceAnalytics
names <- companies$names
tickers <- companies$tickers
data.frame(names, tickers, profitability, growth, safety, payouts)
}
collectmarketdata()
collectmarketdata <- function(){
##Collect market data focuses on collecting needed
##  means and sd's for use in other functions.
#We need:
# gross profits over assets (GPOA)
# Return on equity (ROE)
# return on assets (ROA)
# Cash flow over assets (GPOA)
# Gross margin (GMAR)
# Fraction of earnings composed of cash
#   i.e., low accruals, ACC
companies <- read.csv("data/companies.csv")
numCompanies <- length(companies$tickers)
BS <- read.csv("data/balancesheets.csv")
CF <- read.csv("data/cashflows.csv")
IS <- read.csv("data/incomestatements.csv")
#What to do with missing data?
# If we're missing a lot of data, then simply assigning 0's skews
# the mean and SD. However, short term solution to getting a result.
BS[is.na(BS)] <- 0
CF[is.na(CF)] <- 0
IS[is.na(IS)] <- 0
print("TEST")
profitability <- collectmarketprofitability(companies, BS, CF, IS)
print("TEST1")
growth <- collectmarketgrowth(companies, BS, CF, IS)
print("TEST2")
safety <- rep(0, numCompanies)
payouts <- collectmarketpayout(companies, BS, CF, IS)
print("TEST3")
###SAFETY
#BAB
# - market beta
# Use PerformanceAnalytics
names <- companies$names
tickers <- companies$tickers
data.frame(names, tickers, profitability, growth, safety, payouts)
}
collectmarketdata()
collectmarketgrowth <- function(x, BS, CF, IS){
numCompanies <- length(x$tickers)
growth <- rep(0, numCompanies)
GPOA <- rep(0, numCompanies)
ROE <- rep(0, numCompanies)
ROA <- rep(0, numCompanies)
CFOA <- rep(0, numCompanies)
GMAR <- rep(0, numCompanies)
ACC <- rep(0, numCompanies)
for(i in 1:numCompanies){
cBS <- BS[,(4*i)-2]
cBSm3y <- BS[,(4*i)+1]
cCF <- CF[,(4*i)-2]
cCFm3y <- CF[,(4*i)+1]
cIS <- IS[,(4*i)-2]
cISm3y <- IS[,(4*i)+1]
print(i)
###GROWTH
#GPOA
#(5 year change in gross profits)/Total assets
#GP - IS 6
#Total assets - BS 18
GPOA[i] <- (cIS[6] - cISm3y[6])/(cBSm3y[18])
#(5 year change in Net income)/book equity
#Net income - CF 2
# Book equity (Total equity) - BS 40
ROE[i] <- (cCF[2] - cCFm3y[2])/(cBSm3y[40])
#(5 year change in net income)/total assets
# Net income - CF 2
# Total assets - BS 18
ROA[i] <- (cCF[2] - cCFm3y[2])/(cBSm3y[18])
print("test")
#(5 year change in cash flow over assets)
#Change in cash flow = net income + depreciation - change in working capital - capital expenditure
# IB (Net income) - CF 2
# Depreciation - CF 3
# Change in working capital - CF 7
# Capital expenditure - CF 9
#Total assets - BS 18
changeCF1 <- (cCF[2] + cCF[3] - cCF[7] - cCf[9])
changeCF2 <- (cCFm3y[2] + cCFm3y[3] - cCFm3y[7] - cCfm3y[9])
CFOA[i] <- (changeCF1 - changeCF2)/(cBSm3y[18])
#(5 year change in gross profit)/(total sales)
# GP - IS 6
# Total sales (total revenues) - IS 4
GMAR[i] <- (cIS[6] - cISm3y[6])/(cISm3y[4])
#(5 year change in (low) accruals)/total assets
# Low accruals = DP - (change in WC)
# DP - CF 3
#Change in working capital - CF 7
#Total assets - BS 18
accrual1 <- cCF[3] - cCF[7]
accrual2 <- cCFm3y[3] - cCFm3y[7]
ACC[i] <- (accrual1 - accrual2)/(cBSm3y[18])
}
#Scale converts the individual scores for these values into z-scores.
GPOA <- scale(GPOA)
ROE <- scale(ROE)
ROA <- scale(ROA)
CFOA <- scale(CFOA)
GMAR <- scale(GMAR)
ACC <- scale(ACC)
GPOA[is.nan(GPOA)] <- 0
ROE[is.nan(ROE)] <- 0
ROA[is.nan(ROA)] <- 0
CFOA[is.nan(CFOA)] <- 0
GMAR[is.nan(GMAR)] <- 0
ACC[is.nan(ACC)] <- 0
for(i in 1:numCompanies){
growth[i] <- GPOA[i] + ROE[i] + ROA[i] + CFOA[i] + GMAR[i] + ACC[i]
}
scale(growth)
}
collectmarketdata()
collectmarketdata()
collectmarketgrowth <- function(x, BS, CF, IS){
numCompanies <- length(x$tickers)
growth <- rep(0, numCompanies)
GPOA <- rep(0, numCompanies)
ROE <- rep(0, numCompanies)
ROA <- rep(0, numCompanies)
CFOA <- rep(0, numCompanies)
GMAR <- rep(0, numCompanies)
ACC <- rep(0, numCompanies)
for(i in 1:numCompanies){
cBS <- BS[,(4*i)-2]
cBSm3y <- BS[,(4*i)+1]
cCF <- CF[,(4*i)-2]
cCFm3y <- CF[,(4*i)+1]
cIS <- IS[,(4*i)-2]
cISm3y <- IS[,(4*i)+1]
print(i)
###GROWTH
#GPOA
#(5 year change in gross profits)/Total assets
#GP - IS 6
#Total assets - BS 18
GPOA[i] <- (cIS[6] - cISm3y[6])/(cBSm3y[18])
#(5 year change in Net income)/book equity
#Net income - CF 2
# Book equity (Total equity) - BS 40
ROE[i] <- (cCF[2] - cCFm3y[2])/(cBSm3y[40])
#(5 year change in net income)/total assets
# Net income - CF 2
# Total assets - BS 18
ROA[i] <- (cCF[2] - cCFm3y[2])/(cBSm3y[18])
print("test")
#(5 year change in cash flow over assets)
#Change in cash flow = net income + depreciation - change in working capital - capital expenditure
# IB (Net income) - CF 2
# Depreciation - CF 3
# Change in working capital - CF 7
# Capital expenditure - CF 9
#Total assets - BS 18
changeCF1 <- (cCF[2] + cCF[3] - cCF[7] - cCf[9])
changeCF2 <- (cCFm3y[2] + cCFm3y[3] - cCFm3y[7] - cCfm3y[9])
CFOA[i] <- (changeCF1 - changeCF2)/(cBSm3y[18])
print("test")
#(5 year change in gross profit)/(total sales)
# GP - IS 6
# Total sales (total revenues) - IS 4
GMAR[i] <- (cIS[6] - cISm3y[6])/(cISm3y[4])
#(5 year change in (low) accruals)/total assets
# Low accruals = DP - (change in WC)
# DP - CF 3
#Change in working capital - CF 7
#Total assets - BS 18
accrual1 <- cCF[3] - cCF[7]
accrual2 <- cCFm3y[3] - cCFm3y[7]
ACC[i] <- (accrual1 - accrual2)/(cBSm3y[18])
print("test")
}
#Scale converts the individual scores for these values into z-scores.
GPOA <- scale(GPOA)
ROE <- scale(ROE)
ROA <- scale(ROA)
CFOA <- scale(CFOA)
GMAR <- scale(GMAR)
ACC <- scale(ACC)
GPOA[is.nan(GPOA)] <- 0
ROE[is.nan(ROE)] <- 0
ROA[is.nan(ROA)] <- 0
CFOA[is.nan(CFOA)] <- 0
GMAR[is.nan(GMAR)] <- 0
ACC[is.nan(ACC)] <- 0
for(i in 1:numCompanies){
growth[i] <- GPOA[i] + ROE[i] + ROA[i] + CFOA[i] + GMAR[i] + ACC[i]
}
scale(growth)
}
collectmarketdata()
collectmarketdata <- function(){
##Collect market data focuses on collecting needed
##  means and sd's for use in other functions.
#We need:
# gross profits over assets (GPOA)
# Return on equity (ROE)
# return on assets (ROA)
# Cash flow over assets (GPOA)
# Gross margin (GMAR)
# Fraction of earnings composed of cash
#   i.e., low accruals, ACC
companies <- read.csv("data/companies.csv")
numCompanies <- length(companies$tickers)
BS <- read.csv("data/balancesheets.csv")
CF <- read.csv("data/cashflows.csv")
IS <- read.csv("data/incomestatements.csv")
#What to do with missing data?
# If we're missing a lot of data, then simply assigning 0's skews
# the mean and SD. However, short term solution to getting a result.
BS[is.na(BS)] <- 0
CF[is.na(CF)] <- 0
IS[is.na(IS)] <- 0
profitability <- collectmarketprofitability(companies, BS, CF, IS)
growth <- collectmarketgrowth(companies, BS, CF, IS)
safety <- rep(0, numCompanies)
payouts <- collectmarketpayout(companies, BS, CF, IS)
###SAFETY
#BAB
# - market beta
# Use PerformanceAnalytics
names <- companies$names
tickers <- companies$tickers
data.frame(names, tickers, profitability, growth, safety, payouts)
}
collectmarketgrowth <- function(x, BS, CF, IS){
numCompanies <- length(x$tickers)
growth <- rep(0, numCompanies)
GPOA <- rep(0, numCompanies)
ROE <- rep(0, numCompanies)
ROA <- rep(0, numCompanies)
CFOA <- rep(0, numCompanies)
GMAR <- rep(0, numCompanies)
ACC <- rep(0, numCompanies)
for(i in 1:numCompanies){
cBS <- BS[,(4*i)-2]
cBSm3y <- BS[,(4*i)+1]
cCF <- CF[,(4*i)-2]
cCFm3y <- CF[,(4*i)+1]
cIS <- IS[,(4*i)-2]
cISm3y <- IS[,(4*i)+1]
print(i)
###GROWTH
#GPOA
#(5 year change in gross profits)/Total assets
#GP - IS 6
#Total assets - BS 18
GPOA[i] <- (cIS[6] - cISm3y[6])/(cBSm3y[18])
#(5 year change in Net income)/book equity
#Net income - CF 2
# Book equity (Total equity) - BS 40
ROE[i] <- (cCF[2] - cCFm3y[2])/(cBSm3y[40])
#(5 year change in net income)/total assets
# Net income - CF 2
# Total assets - BS 18
ROA[i] <- (cCF[2] - cCFm3y[2])/(cBSm3y[18])
#(5 year change in cash flow over assets)
#Change in cash flow = net income + depreciation - change in working capital - capital expenditure
# IB (Net income) - CF 2
# Depreciation - CF 3
# Change in working capital - CF 7
# Capital expenditure - CF 9
#Total assets - BS 18
changeCF1 <- (cCF[2] + cCF[3] - cCF[7] - cCF[9])
changeCF2 <- (cCFm3y[2] + cCFm3y[3] - cCFm3y[7] - cCfm3y[9])
CFOA[i] <- (changeCF1 - changeCF2)/(cBSm3y[18])
#(5 year change in gross profit)/(total sales)
# GP - IS 6
# Total sales (total revenues) - IS 4
GMAR[i] <- (cIS[6] - cISm3y[6])/(cISm3y[4])
#(5 year change in (low) accruals)/total assets
# Low accruals = DP - (change in WC)
# DP - CF 3
#Change in working capital - CF 7
#Total assets - BS 18
accrual1 <- cCF[3] - cCF[7]
accrual2 <- cCFm3y[3] - cCFm3y[7]
ACC[i] <- (accrual1 - accrual2)/(cBSm3y[18])
}
#Scale converts the individual scores for these values into z-scores.
GPOA <- scale(GPOA)
ROE <- scale(ROE)
ROA <- scale(ROA)
CFOA <- scale(CFOA)
GMAR <- scale(GMAR)
ACC <- scale(ACC)
GPOA[is.nan(GPOA)] <- 0
ROE[is.nan(ROE)] <- 0
ROA[is.nan(ROA)] <- 0
CFOA[is.nan(CFOA)] <- 0
GMAR[is.nan(GMAR)] <- 0
ACC[is.nan(ACC)] <- 0
for(i in 1:numCompanies){
growth[i] <- GPOA[i] + ROE[i] + ROA[i] + CFOA[i] + GMAR[i] + ACC[i]
}
scale(growth)
}
test <- collectmarketdata()
collectmarketgrowth <- function(x, BS, CF, IS){
numCompanies <- length(x$tickers)
growth <- rep(0, numCompanies)
GPOA <- rep(0, numCompanies)
ROE <- rep(0, numCompanies)
ROA <- rep(0, numCompanies)
CFOA <- rep(0, numCompanies)
GMAR <- rep(0, numCompanies)
ACC <- rep(0, numCompanies)
for(i in 1:numCompanies){
cBS <- BS[,(4*i)-2]
cBSm3y <- BS[,(4*i)+1]
cCF <- CF[,(4*i)-2]
cCFm3y <- CF[,(4*i)+1]
cIS <- IS[,(4*i)-2]
cISm3y <- IS[,(4*i)+1]
print(i)
###GROWTH
#GPOA
#(5 year change in gross profits)/Total assets
#GP - IS 6
#Total assets - BS 18
GPOA[i] <- (cIS[6] - cISm3y[6])/(cBSm3y[18])
#(5 year change in Net income)/book equity
#Net income - CF 2
# Book equity (Total equity) - BS 40
ROE[i] <- (cCF[2] - cCFm3y[2])/(cBSm3y[40])
#(5 year change in net income)/total assets
# Net income - CF 2
# Total assets - BS 18
ROA[i] <- (cCF[2] - cCFm3y[2])/(cBSm3y[18])
#(5 year change in cash flow over assets)
#Change in cash flow = net income + depreciation - change in working capital - capital expenditure
# IB (Net income) - CF 2
# Depreciation - CF 3
# Change in working capital - CF 7
# Capital expenditure - CF 9
#Total assets - BS 18
changeCF1 <- (cCF[2] + cCF[3] - cCF[7] - cCF[9])
changeCF2 <- (cCFm3y[2] + cCFm3y[3] - cCFm3y[7] - cCFm3y[9])
CFOA[i] <- (changeCF1 - changeCF2)/(cBSm3y[18])
#(5 year change in gross profit)/(total sales)
# GP - IS 6
# Total sales (total revenues) - IS 4
GMAR[i] <- (cIS[6] - cISm3y[6])/(cISm3y[4])
#(5 year change in (low) accruals)/total assets
# Low accruals = DP - (change in WC)
# DP - CF 3
#Change in working capital - CF 7
#Total assets - BS 18
accrual1 <- cCF[3] - cCF[7]
accrual2 <- cCFm3y[3] - cCFm3y[7]
ACC[i] <- (accrual1 - accrual2)/(cBSm3y[18])
}
#Scale converts the individual scores for these values into z-scores.
GPOA <- scale(GPOA)
ROE <- scale(ROE)
ROA <- scale(ROA)
CFOA <- scale(CFOA)
GMAR <- scale(GMAR)
ACC <- scale(ACC)
GPOA[is.nan(GPOA)] <- 0
ROE[is.nan(ROE)] <- 0
ROA[is.nan(ROA)] <- 0
CFOA[is.nan(CFOA)] <- 0
GMAR[is.nan(GMAR)] <- 0
ACC[is.nan(ACC)] <- 0
for(i in 1:numCompanies){
growth[i] <- GPOA[i] + ROE[i] + ROA[i] + CFOA[i] + GMAR[i] + ACC[i]
}
scale(growth)
}
test <- collectmarketdata()
View(test)
collectmarketpayout <- function(x, BS, CF, IS){
# CollectMarketPayout collects data on overall payouts
## In the market for individual companies for later processing.
## x is the list of companies to be processed. BS, CF, IS are financial statements.
numCompanies <- length(x$tickers)
payouts <- rep(0, numCompanies)
EISS <- rep(0, numCompanies)
DISS <- rep(0, numCompanies)
NPOP <- rep(0, numCompanies)
for(i in 1:numCompanies){
cBS <- BS[,(4*i)-2]
cBSm1y <- BS[,(4*i)-1]
cBSm2y <- BS[,(4*i)]
cBSm3y <- BS[,(4*i)+1]
cCF <- CF[,(4*i)-2]
cCFm1y <- CF[,(4*i)-1]
cCFm2y <- CF[,(4*i)]
cCFm3y <- CF[,(4*i)+1]
cIS <- IS[,(4*i)-2]
cISm1y <- IS[,(4*i)-1]
cISm2y <- IS[,(4*i)]
cISm3y <- IS[,(4*i)+1]
#EISS
# Issuance (retirement) of stock, net - CF 14
##Total number of Shares - BS 43
EISS[i] <- -log(cBS[43]/cBSm1y[43])
#DISS
# Issuance (retirement) of debt, net - CF 15
#Total debt - BS 28
DISS[i] <- -log(cBS[28]/cBSm1y[28])
#NPOP
# (Net income - changes in book equity) / (total profits over the past 5 years)
# Net income - CF 2
# Total equity - BS 40
# Gross profits - IS 6
totalNetPayouts <- (cCF[2] - cBS[40]) + (cCFm1y[2] - cBSm1y[40]) + (cCFm2y[2] - cBSm2y[40]) + (cCFm3y[2] - cBSm3y[40])
totalProfits <- cIS[6] + cISm1y[6] + cISm2y[6] + cISm3y[6]
NPOP[i] <- totalNetPayouts/totalProfits
}
#Scale converts the individual scores for these values into z-scores.
EISS <- scale(EISS)
DISS <- scale(DISS)
NPOP <- scale(NPOP)
EISS[is.na(EISS)] <- 0
DISS[is.na(DISS)] <- 0
NPOP[is.na(NPOP)] <- 0
for(i in 1:numCompanies){
payouts[i] <- EISS[i] + DISS[i] + NPOP[i]
}
scale(payouts)
}
test <- collectmarketdata()
View(test)
