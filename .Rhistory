median(lifetimes, data=resample(bulbs))
median(lifetimes, data=resample(bulbs))
help pdf
help
pdf
? pdf
? cdf
length(bulbs)
length(bulbs$lifetimes)
sqrt(144/4)
? qnorm
? qnorm
? dpois
ln(1/2)
log(1/2)
log(.9)
log(8/9)
(log(8/9))/(-1/1000)
? qnorm
1-pbinom(0.3,150,0.25)
1-pbinom(0.5,150,0.25)
1-pbinom(47,150,0.25)
1-pbinom(47,150,0.4)
1-pbinom(47,100,0.4)
? pbinom
1-pbinom(25,150,0.25)
1-pbinom(26,150,0.25)
1-pbinom(26,150,0.25)
1-pbinom(28,150,0.25)
1-pbinom(30,150,0.25)
1-pbinom(40,150,0.25)
1-pbinom(50,150,0.25)
50/150
1-pbinom(51,150,0.25)
1-pbinom(43,150,0.25)
1-pbinom(45,150,0.25)
1-pbinom(46,150,0.25)
46/150
1-pbinom(50,150,0.25)
1-pbinom(49,150,0.25)
50/150
pbinom(50,150,0.25)
pbinom(50,150,0.75)
pbinom(50,150,0.3)
pbinom(49,150,0.3)
pbinom(30,150,0.3)
pbinom(40,150,0.3)
pbinom(35,150,0.3)
pbinom(50,200,0.3)
pbinom(50,200,0.25)
1-pbinom(50,200,0.25)
1-pbinom(50,150,0.25)
1-pbinom(60,200,0.25)
1-pbinom(65,200,0.25)
1-pbinom(64,200,0.25)
pbinom(64,200,0.3)
pbinom(64,1000,0.3)
pbinom(100,1000,0.3)
pbinom(200,1000,0.3)
pbinom(300,1000,0.3)
pbinom(250,1000,0.3)
pbinom(280,1000,0.3)
pbinom(281,1000,0.3)
1-pbinom(260,1000,0.25)
1-pbinom(280,1000,0.25)
pbinom(400,1200,0.3)
pbinom(300,1200,0.3)
pbinom(350,1200,0.3)
pbinom(339,1200,0.3)
pbinom(330,1200,0.3)
pbinom(333,1200,0.3)
pbinom(334,1200,0.3)
1-pbinom(333,1200,0.25)
pbinom(400,1500,0.3)
pbinom(500,1500,0.3)
pbinom(450,1500,0.3)
pbinom(449,1500,0.3)
1-pbinom(449,1500,0.25)
1-pbinom(250,1300,0.25)
1-pbinom(350,1300,0.25)
1-pbinom(340,1300,0.25)
1-pbinom(360,1300,0.25)
1-pbinom(361,1300,0.25)
1-pbinom(362,1300,0.25)
pbinom(362,1300,0.3)
46/50
46/150
362/1300
df = function(s1,s2,n1,n2) {
num=(s1^2/n1 + s2^2/n2)^2
den=((s1^2/n1)^2/(n1-1) +(s2^2/n2)^2/(n2-1))
num/den
}
df = function(s1,s2,n1,n2) {
num=(s1^2/n1 + s2^2/n2)^2
den=((s1^2/n1)^2/(n1-1) +(s2^2/n2)^2/(n2-1))
num/den
}
df = function(s1,s2,n1,n2) {num=(s1^2/n1 + s2^2/n2)^2
den=((s1^2/n1)^2/(n1-1) +(s2^2/n2)^2/(n2-1))
num/den
}
http://sites.williams.edu/rdeveaux/files/2014/09/Juul.txt
IGF = read.delim("http://sites.williams.edu/rdeveaux/files/2014/09/Juul.txt")
IGF
over13 = subset(IGF,age > 13)
over13
over13
female = subset(over13, sex == "F")
female
male = subset(over13, sex == "M")
male
mean(female$igf)
mean(male$igf)
(418.734 - 388.5117)/530.9
(418.734 - 388.5117)/(sqrt(530.9))
sd(female$igf)
sd(male$igf)
s1 = sd(female$igf)
s2 = sd(male$igf)
n1 = length(female)
n1
female
n = length(female$igf)
n
y1 - y2
y1 = mean(female$igf)
y2 = mean(male$igf)
y1
y2
y1 - y2
stderror = sqrt(((s1^2)/n1) + ((s2^2)/n2))
n1 = length(female$igf)
n2 = length(male$igf)
stderror = sqrt(((s1^2)/n1) + ((s2^2)/n2))
stderror
(y1 - y2)/(stderror)
t = (y1 - y2)/(stderror)
t*stderror
57.1 - 30.22229
26.87771/2.203
30.22229 - 26.87771
n1
n2
sd(over13$igf)
2*6436341*6436343
? qt
? qz
library(MASS)
cars93
Cars93
http://sites.williams.edu/rdeveaux/files/2014/09/Cups.txt
Cups = read.delim("http://sites.williams.edu/rdeveaux/files/2014/09/Cups.txt")
aov.Cups=aov(Difference~Container,data=Cups)
summary(aov.Cups)
plot(residuals(aov.Cups)~predict(aov.Cups))
plot(residuals(aov.Cups)~predict(aov.Cups))
with(Cups,pairwise.t.test(Difference,Container,p.adjust="bonferroni"))
>with(Cups,pairwise.t.test(Difference,Container,p.adjust="none"))
with(Cups,pairwise.t.test(Difference,Container,p.adjust="none"))
with(Cups,pairwise.t.test(Difference,Container,p.adjust="bonferroni"))$p.value<.05
with(Cups,pairwise.t.test(Difference,Container,p.adjust="none"))$p.value<.05
salaries <- read.csv("~/Downloads/salaries.txt")
View(salaries)
require(mosaic)
with(salaries, mosaicplot(table(education,income),col=rainbow(14)))
with(salaries, mosaicplot(table(education.num,income),col=rainbow(14)))
table(education,income)
with(salaries,table(education,income))
with(salaries, mosaicplot(table(education.num,income),col=rainbow(2)))
with(salaries, mosaicplot(table(education.num,income),col=rainbow(2),main = "Education Level vs. Income with respect to $50K"))
with(salaries, mosaicplot(table(education.num,income),col=rainbow(2),main = "Education Level vs. Income with Respect to $50K"))
USsalaries <- subset(salaries,native.country=="United-States")
USsalaries
subset(salaries,native.country=="United-States")
subset(salaries,native.country==" United-States")
educationvincome = with(USsalaries, table(education, income))
educationvincome <- with(USsalaries, table(education, income))
mosaicplot(educationvincome,
col=rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
educationvincome <- with(USsalaries, table(education.num, income))
mosaicplot(educationvincome,
col=rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
educationvincome = with(USsalaries, table(education.num, income))
mosaicplot(educationvincome,
col=rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
require(mosaic)
mosaicplot(educationvincome,
col=rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
education.income <- with(salaries.us, table(education.num, income))
salaries.us <- subset(salaries, native.country == " United-States")
education.income <- with(salaries.us, table(education.num, income))
mosaicplot(education.income,
col=rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
salaries <- read.csv("~/Downloads/salaries.txt")
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
race.income <- with(salaries.us, table(race,income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
salaries.us$race <- ordered(salaries.us$race, levels = c("API", "Black", "AIE", "White", "Other"))
race.income <- with(salaries.us, table(race,income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
race.income <- with(salaries.us, table(salaries.us$race, salaries.us$income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
# Import dataset
salaries <- read.csv("~/Downloads/salaries.txt")
# Subset data to only US citizens
salaries.us <- subset(salaries, native.country == " United-States")
# Create data table with just education level and income
education.income <- with(salaries.us, table(education.num, income))
# Plot mosaic plot of education level versus income
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
Xsq.edusalaries = chisq.test(education.income)
Xsq.edusalaries
Xsq.edusalaries$observed
Xsq.edusalaries$expected
sex.income <- with(salaries.us, table(sex,income))
mosaicplot(sex.income,
col=rainbow(2),
main = "Sex vs. Income with Respect to $50K",
xlab = "Sex",
ylab = "Income with Respect to $50K")
Xsq.sexsalaries = chisq.test(sex.income)
Xsq.sexsalaries
Xsq.sexsalaries$observed
Xsq.sexsalaries$expected
salaries.us$race <- ordered(salaries.us$race, levels = c("API", "Black", "AIE", "White", "Other"))
race.income <- with(salaries.us, table(race,income))
race.income <- with(salaries.us, table(salaries.us$race, salaries.us$income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
Xsq.racesalaries = chisq.test(race.income)
Xsq.racesalaries
Xsq.racesalaries$observed
Xsq.racesalaries$expected
require(mosaic)
# Import dataset
salaries <- read.csv("~/Downloads/salaries.txt")
# Subset data to only US citizens
salaries.us <- subset(salaries, native.country == " United-States")
# Create data table with just education level and income
education.income <- with(salaries.us, table(education.num, income))
# Plot mosaic plot of education level versus income
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
Xsq.edusalaries = chisq.test(education.income)
Xsq.edusalaries
Xsq.edusalaries$observed
Xsq.edusalaries$expected
sex.income <- with(salaries.us, table(sex,income))
mosaicplot(sex.income,
col=rainbow(2),
main = "Sex vs. Income with Respect to $50K",
xlab = "Sex",
ylab = "Income with Respect to $50K")
Xsq.sexsalaries = chisq.test(sex.income)
Xsq.sexsalaries
Xsq.sexsalaries$observed
Xsq.sexsalaries$expected
salaries.us$race <- ordered(salaries.us$race, levels = c("API", "Black", "AIE", "White", "Other"))
race.income <- with(salaries.us, table(race,income))
race.income <- with(salaries.us, table(salaries.us$race, salaries.us$income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
Xsq.racesalaries = chisq.test(race.income)
Xsq.racesalaries
Xsq.racesalaries$observed
Xsq.racesalaries$expected
race.income <- with(salaries.us, table(race,income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
View(race.income)
?factor
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level versus Income",
xlab = "Education Level",
ylab = "Income (US dollars)")
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level vs. Income",
xlab = "Education Level (see description of labels below)",
ylab = "Income (US dollars)")
# Create data table with just education level and income
education.income <- with(salaries.us, table(education, income))
# Plot mosaic plot of education level versus income
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level vs. Income",
xlab = "Education Level (see label descriptions below)",
ylab = "Income (US dollars)")
education.income <- with(salaries.us, table(education.num, income))
# Plot mosaic plot of education level versus income
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level vs. Income",
xlab = "Education Level (see label descriptions below)",
ylab = "Income (US dollars)")
Xsq.edusalaries
Xsq.edusalaries$observed
Xsq.edusalaries$expected
Xsq.edusalaries
View(salaries)
length(USsalaries)
USsalaries
salaries.us <- subset(salaries, native.country == " United-States")
length(salaries.us)
length(salaries.us$income)
133/387
(94/387)/(133/387)
94/(94+52+18)
install.packages("ws.data",contriburl="http://www.kanecap.com/R",type="source")
library(ws.data)
help(package="ws.data")
data(daily.1998)
head(daily.1998)
setwd("econ20/R Paper/Discrete/")
source("xbrlSECdev01.R")
require(XBRL)
xbrl.vars <- xbrlDoAll("http://www.sec.gov/Archives/edgar/data/701221/000095012309058417/ci-20090930.xml")
xbrl.sec <- xbrlSECdev01(xbrl.vars)
rawlist <- xbrl.sec$showStatements()
options(stringsAsFactions=False)
options(stringsAsFactions=FALSE)
rawlist <- xbrl.sec$showStatements()
xbrl.vars <- xbrlDoAll("http://www.sec.gov/Archives/edgar/data/701221/000095012309058417/ci-20090930.xml")
options(stringsAsFactors=False)
options(stringsAsFactors=FALSE)
xbrl.vars <- xbrlDoAll("http://www.sec.gov/Archives/edgar/data/701221/000095012309058417/ci-20090930.xml")
xbrl.sec <- xbrlSECdev01(xbrl.vars)
rawlist <- xbrl.sec$showStatements()
rawlist
grepl("elementId",rawlist[[27]][[3]])
grepl("elementId",rawlist[[27]][[3]][1])
grepl("us-gaap",rawlist[[27]][[3]][1])
ralist[[27]][[3]]
rawlist[[27]][[3]]
colnames(rawlist[[27]][[3]])
inst <- "http://www.sec.gov/Archives/edgar/data/1522236/000114420414062019/slnr-20140831.xml"
xbrl.vars2 <- xbrlDoAll(inst)
xbrl.sec2 <- xbrlSECdev01(xbrl.vars2)
rawlist <- xbrl.sec2$showStatements
rawlist
rawlist <- xbrl.sec2$showStatements()
rawlist
colnames(rawlist[[40]][[1]][1])
length(colnames(rawlist[[40]][[1]][1]))
length(colnames(rawlist[[40]][[1]]))
colnames(rawlist[[40]][[1]])
grepl("us-gaap", rawlist[[40]][[1][1],ignore.case=TRUE)
grepl("us-gaap", rawlist[[40]][[1]][1],ignore.case=TRUE)
grepl("us-gaap", rawlist[[4]][[3]][1],ignore.case=TRUE)
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
debug(getfinancials('Q'))
companies$ciks[i]
newUrl
indices
rawlist
temp
grepl("us-gaap", rawlist[[4]][[3]][1],ignore.case=TRUE)
temp
length(rawlist)
length(rawlist[[4]])
debug(getfinancials('Q'))
hasNext
indices
pos
pos2
pos
indices
index2
newUrl
grepl(".*[0-9].xml",htmlCode2[133],ignore.case=TRUE)
newUrl3 <- paste(start3,sub("\\\".*","",sub(".*Archives","",htmlCode2[133])),sep="")
options(stringsAsFactors = FALSE)
xbrl.vars <- xbrlDoAll(newUrl3)
xbrl.sec <- xbrlSECdev01(xbrl.vars)
rawlist <- xbrl.sec$showStatements()
rawlist
length(temp)
grepl("us-gaap", rawlist[[4]][[3]][1],ignore.case=TRUE)
cur <- 1
labelfound <- 0
while(cur <= length(colnames(rawlist[[pos]][[pos2]])) && !labelfound) {
if(colnames(rawlist[[pos]][[pos2]])[cur] == "label") {
namesvect <- c(namesvect,"label")
namesvect2 <- c(namesvect2, paste(companies$tickers[i],"label",sep=" "))
labelfound <- 1
}
cur = cur + 1
}
cur <- 1
labelfound <- 0
while(cur <= length(colnames(rawlist[[pos]][[pos2]])) && !labelfound) {
if(colnames(rawlist[[4]][[3]])[cur] == "label") {
namesvect <- c(namesvect,"label")
namesvect2 <- c(namesvect2, paste(companies$tickers[i],"label",sep=" "))
labelfound <- 1
}
cur = cur + 1
}
cur <- 1
labelfound <- 0
while(cur <= length(colnames(rawlist[[4]][[3]])) && !labelfound) {
if(colnames(rawlist[[4]][[3]])[cur] == "label") {
namesvect <- c(namesvect,"label")
namesvect2 <- c(namesvect2, paste(companies$tickers[i],"label",sep=" "))
labelfound <- 1
}
cur = cur + 1
}
cur
colnames(rawlist[[4]][[3]])
index2
index2
index2
index2
newUrl
rawlist
pos
length(rawlist[[pos]])
rawlist[[1]]
pos2
rawlist[[2]]
pos
pos2
rawlist[[pos]][[pos2]]
rawlist
rawlist[[pos]][[pos2]][1]
length(colnames(rawlist[[pos]][[pos2]]))
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
getfinancials('Q')
companies <- read.csv("testcsv2.csv")
periodType <- character()
length(periodType)
periodType <- "10-Q"
length(periodType)
source("getfinancials.R")
getfinancials('A')
source("getfinancials.R")
getfinancials('A')
source("getfinancials.R")
getfinancials('A')
companies <- "testcsv2.csv"
companies
companies <- read.csv("testcsv2.csv")
companies
source("getfinancials.R")
getfinancials('A')
getfinancials('A')
getfinancials('A')
getfinancials('A')
companies
source("getfinancials.R")
getfinancials('A')
getfinancials('A')
source("getfinancials.R")
getfinancials('A')
