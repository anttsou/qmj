1-pbinom(50,150,0.25)
50/150
1-pbinom(51,150,0.25)
1-pbinom(43,150,0.25)
1-pbinom(45,150,0.25)
1-pbinom(46,150,0.25)
46/150
1-pbinom(50,150,0.25)
1-pbinom(49,150,0.25)
50/150
pbinom(50,150,0.25)
pbinom(50,150,0.75)
pbinom(50,150,0.3)
pbinom(49,150,0.3)
pbinom(30,150,0.3)
pbinom(40,150,0.3)
pbinom(35,150,0.3)
pbinom(50,200,0.3)
pbinom(50,200,0.25)
1-pbinom(50,200,0.25)
1-pbinom(50,150,0.25)
1-pbinom(60,200,0.25)
1-pbinom(65,200,0.25)
1-pbinom(64,200,0.25)
pbinom(64,200,0.3)
pbinom(64,1000,0.3)
pbinom(100,1000,0.3)
pbinom(200,1000,0.3)
pbinom(300,1000,0.3)
pbinom(250,1000,0.3)
pbinom(280,1000,0.3)
pbinom(281,1000,0.3)
1-pbinom(260,1000,0.25)
1-pbinom(280,1000,0.25)
pbinom(400,1200,0.3)
pbinom(300,1200,0.3)
pbinom(350,1200,0.3)
pbinom(339,1200,0.3)
pbinom(330,1200,0.3)
pbinom(333,1200,0.3)
pbinom(334,1200,0.3)
1-pbinom(333,1200,0.25)
pbinom(400,1500,0.3)
pbinom(500,1500,0.3)
pbinom(450,1500,0.3)
pbinom(449,1500,0.3)
1-pbinom(449,1500,0.25)
1-pbinom(250,1300,0.25)
1-pbinom(350,1300,0.25)
1-pbinom(340,1300,0.25)
1-pbinom(360,1300,0.25)
1-pbinom(361,1300,0.25)
1-pbinom(362,1300,0.25)
pbinom(362,1300,0.3)
46/50
46/150
362/1300
df = function(s1,s2,n1,n2) {
num=(s1^2/n1 + s2^2/n2)^2
den=((s1^2/n1)^2/(n1-1) +(s2^2/n2)^2/(n2-1))
num/den
}
df = function(s1,s2,n1,n2) {
num=(s1^2/n1 + s2^2/n2)^2
den=((s1^2/n1)^2/(n1-1) +(s2^2/n2)^2/(n2-1))
num/den
}
df = function(s1,s2,n1,n2) {num=(s1^2/n1 + s2^2/n2)^2
den=((s1^2/n1)^2/(n1-1) +(s2^2/n2)^2/(n2-1))
num/den
}
http://sites.williams.edu/rdeveaux/files/2014/09/Juul.txt
IGF = read.delim("http://sites.williams.edu/rdeveaux/files/2014/09/Juul.txt")
IGF
over13 = subset(IGF,age > 13)
over13
over13
female = subset(over13, sex == "F")
female
male = subset(over13, sex == "M")
male
mean(female$igf)
mean(male$igf)
(418.734 - 388.5117)/530.9
(418.734 - 388.5117)/(sqrt(530.9))
sd(female$igf)
sd(male$igf)
s1 = sd(female$igf)
s2 = sd(male$igf)
n1 = length(female)
n1
female
n = length(female$igf)
n
y1 - y2
y1 = mean(female$igf)
y2 = mean(male$igf)
y1
y2
y1 - y2
stderror = sqrt(((s1^2)/n1) + ((s2^2)/n2))
n1 = length(female$igf)
n2 = length(male$igf)
stderror = sqrt(((s1^2)/n1) + ((s2^2)/n2))
stderror
(y1 - y2)/(stderror)
t = (y1 - y2)/(stderror)
t*stderror
57.1 - 30.22229
26.87771/2.203
30.22229 - 26.87771
n1
n2
sd(over13$igf)
2*6436341*6436343
? qt
? qz
library(MASS)
cars93
Cars93
http://sites.williams.edu/rdeveaux/files/2014/09/Cups.txt
Cups = read.delim("http://sites.williams.edu/rdeveaux/files/2014/09/Cups.txt")
aov.Cups=aov(Difference~Container,data=Cups)
summary(aov.Cups)
plot(residuals(aov.Cups)~predict(aov.Cups))
plot(residuals(aov.Cups)~predict(aov.Cups))
with(Cups,pairwise.t.test(Difference,Container,p.adjust="bonferroni"))
>with(Cups,pairwise.t.test(Difference,Container,p.adjust="none"))
with(Cups,pairwise.t.test(Difference,Container,p.adjust="none"))
with(Cups,pairwise.t.test(Difference,Container,p.adjust="bonferroni"))$p.value<.05
with(Cups,pairwise.t.test(Difference,Container,p.adjust="none"))$p.value<.05
salaries <- read.csv("~/Downloads/salaries.txt")
View(salaries)
require(mosaic)
with(salaries, mosaicplot(table(education,income),col=rainbow(14)))
with(salaries, mosaicplot(table(education.num,income),col=rainbow(14)))
table(education,income)
with(salaries,table(education,income))
with(salaries, mosaicplot(table(education.num,income),col=rainbow(2)))
with(salaries, mosaicplot(table(education.num,income),col=rainbow(2),main = "Education Level vs. Income with respect to $50K"))
with(salaries, mosaicplot(table(education.num,income),col=rainbow(2),main = "Education Level vs. Income with Respect to $50K"))
USsalaries <- subset(salaries,native.country=="United-States")
USsalaries
subset(salaries,native.country=="United-States")
subset(salaries,native.country==" United-States")
educationvincome = with(USsalaries, table(education, income))
educationvincome <- with(USsalaries, table(education, income))
mosaicplot(educationvincome,
col=rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
educationvincome <- with(USsalaries, table(education.num, income))
mosaicplot(educationvincome,
col=rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
educationvincome = with(USsalaries, table(education.num, income))
mosaicplot(educationvincome,
col=rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
require(mosaic)
mosaicplot(educationvincome,
col=rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
education.income <- with(salaries.us, table(education.num, income))
salaries.us <- subset(salaries, native.country == " United-States")
education.income <- with(salaries.us, table(education.num, income))
mosaicplot(education.income,
col=rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
salaries <- read.csv("~/Downloads/salaries.txt")
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
race.income <- with(salaries.us, table(race,income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
salaries.us$race <- ordered(salaries.us$race, levels = c("API", "Black", "AIE", "White", "Other"))
race.income <- with(salaries.us, table(race,income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
race.income <- with(salaries.us, table(salaries.us$race, salaries.us$income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
# Import dataset
salaries <- read.csv("~/Downloads/salaries.txt")
# Subset data to only US citizens
salaries.us <- subset(salaries, native.country == " United-States")
# Create data table with just education level and income
education.income <- with(salaries.us, table(education.num, income))
# Plot mosaic plot of education level versus income
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
Xsq.edusalaries = chisq.test(education.income)
Xsq.edusalaries
Xsq.edusalaries$observed
Xsq.edusalaries$expected
sex.income <- with(salaries.us, table(sex,income))
mosaicplot(sex.income,
col=rainbow(2),
main = "Sex vs. Income with Respect to $50K",
xlab = "Sex",
ylab = "Income with Respect to $50K")
Xsq.sexsalaries = chisq.test(sex.income)
Xsq.sexsalaries
Xsq.sexsalaries$observed
Xsq.sexsalaries$expected
salaries.us$race <- ordered(salaries.us$race, levels = c("API", "Black", "AIE", "White", "Other"))
race.income <- with(salaries.us, table(race,income))
race.income <- with(salaries.us, table(salaries.us$race, salaries.us$income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
Xsq.racesalaries = chisq.test(race.income)
Xsq.racesalaries
Xsq.racesalaries$observed
Xsq.racesalaries$expected
require(mosaic)
# Import dataset
salaries <- read.csv("~/Downloads/salaries.txt")
# Subset data to only US citizens
salaries.us <- subset(salaries, native.country == " United-States")
# Create data table with just education level and income
education.income <- with(salaries.us, table(education.num, income))
# Plot mosaic plot of education level versus income
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level vs. Income with Respect to $50K",
xlab = "Education Level",
ylab = "Income with Respect to $50K")
Xsq.edusalaries = chisq.test(education.income)
Xsq.edusalaries
Xsq.edusalaries$observed
Xsq.edusalaries$expected
sex.income <- with(salaries.us, table(sex,income))
mosaicplot(sex.income,
col=rainbow(2),
main = "Sex vs. Income with Respect to $50K",
xlab = "Sex",
ylab = "Income with Respect to $50K")
Xsq.sexsalaries = chisq.test(sex.income)
Xsq.sexsalaries
Xsq.sexsalaries$observed
Xsq.sexsalaries$expected
salaries.us$race <- ordered(salaries.us$race, levels = c("API", "Black", "AIE", "White", "Other"))
race.income <- with(salaries.us, table(race,income))
race.income <- with(salaries.us, table(salaries.us$race, salaries.us$income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
Xsq.racesalaries = chisq.test(race.income)
Xsq.racesalaries
Xsq.racesalaries$observed
Xsq.racesalaries$expected
race.income <- with(salaries.us, table(race,income))
mosaicplot(race.income,
col=rainbow(2),
main = "Race vs. Income with Respect to $50K",
xlab = "Race",
ylab = "Income with Respect to $50K")
View(race.income)
?factor
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level versus Income",
xlab = "Education Level",
ylab = "Income (US dollars)")
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level vs. Income",
xlab = "Education Level (see description of labels below)",
ylab = "Income (US dollars)")
# Create data table with just education level and income
education.income <- with(salaries.us, table(education, income))
# Plot mosaic plot of education level versus income
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level vs. Income",
xlab = "Education Level (see label descriptions below)",
ylab = "Income (US dollars)")
education.income <- with(salaries.us, table(education.num, income))
# Plot mosaic plot of education level versus income
mosaicplot(education.income,
col = rainbow(2),
main = "Education Level vs. Income",
xlab = "Education Level (see label descriptions below)",
ylab = "Income (US dollars)")
Xsq.edusalaries
Xsq.edusalaries$observed
Xsq.edusalaries$expected
Xsq.edusalaries
View(salaries)
length(USsalaries)
USsalaries
salaries.us <- subset(salaries, native.country == " United-States")
length(salaries.us)
length(salaries.us$income)
133/387
(94/387)/(133/387)
94/(94+52+18)
install.packages("ws.data",contriburl="http://www.kanecap.com/R",type="source")
library(ws.data)
help(package="ws.data")
data(daily.1998)
head(daily.1998)
setwd("econ20/R Paper/Discrete/")
source("getfinancials.R")
debug(getfinancials('Q'))
newUrl2
temp
namesvect
namesvect2
tempi
tempindex
k
blank
indices
counter
blank
indices
maxrows
temp
namesvect
namesvect2
namesvect2
temp
maxrows
i
counter
companies$ciks[i]
as.character(companies$ciks[i])
newUrl
blank
indices
htmlCode[243]
newUrl2
temp
pos
pos2
rawlist[[109]][[4]]
rawlist
grepl("CONSOLIDATED",rawlist[[108]][[2]]
)
grepl("CONSOLIDATED",rawlist[[108]][[2]],ignore.case=TRUE)
debugSource('~/econ20/R Paper/Discrete/getfinancials.R')
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
companies <- read.csv("testcsv2.csv")
companies
length(companies$ciks)
indices <- numeric()
length(indices)
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
companies
con <- url(http://www.sec.gov/Archives/edgar/data/1423357/000101054914000613/0001010549-14-000613-index.htm)
con <- url("http://www.sec.gov/Archives/edgar/data/1423357/000101054914000613/0001010549-14-000613-index.htm")
readLines(con)
htmlCode <- readLines(con)
htmlCode[140]
grepl(".*0-9.xml",htmlCode[140])
grepl(".*[0-9].xml",htmlCode[140])
con2 <- url("http://www.sec.gov/Archives/edgar/data/701221/000110465914075195/0001104659-14-075195-index.htm")
grepl(".*[0-9].xml",htmlCode[147])
grepl(".*[0-9].xml",htmlCode[154])
htmlCode2 <- readLines(con2)
grepl(".*[0-9].xml",htmlCode2[147])
grepl(".*[0-9].xml",htmlCode2[154])
source("getfinancials.R")
getfinancials('Q')
companies
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
con <- url("http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=0001408802")
htmlCode <- readLines(con)
index <- 1
indices <- numeric()
while(index <= length(htmlCode)) {
if(grepl("10-Q",htmlCode[index])) {
indices <- c(indices,index+1)
}
index = index + 1
}
indices
length(indices)
source("getfinancials.R")
debug(getfinancials('Q'))
indices
temp
namesvect
namesvect2
indices
temp
temp
namesvect
namesvect2
i
tempindex
k
length(temp)
length(namesvect)
newUrl
indices
newUrl
indices
newUrl
temp
namesvect
namesvect2
k
tempindex
temp
tempindex
k
counter
indices
newUrl
indices
counter
q
source("getfinancials.R")
getfinancials('Q')
con <- url("www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=0000701221&type=&dateb=&owner=include&start=680&count=40")
con <- url("http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=0000701221&type=&dateb=&owner=include&start=680&count=40")
htmlCode <- readLines(con)
htmlCode[84]
grepl("Next 40",htmlCode[84])
grepl("Next 40",htmlCode[85])
source("getfinancials.R")
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
companies
as.character(companies$ciks[7])
as.character(companies$ciks[7]) == "N/A"
as.character(companies$ciks[7]) != "N/A"
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
source("getfinancials.R")
getfinancials('Q')
companies
companies$ciks[8]
con <- url("http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=0001522236")
htmlCode <- readLines(con)
close(con)
index <- 1
# if you want 10-Q data
if(period == 'Q') {
while(index <= length(htmlCode)) {
if(grepl("10-Q",htmlCode[index])) {
indices <- c(indices,index+1)
}
if(grepl("Next 40",htmlCode[85])) {
hasNext <- 1
}
index = index + 1
}
source("getfinancials.R")
debug(getfinancials('Q'))
debug(getfinancials('Q'))
source("getfinancials.R")
debug(getfinancials('Q'))
source("getfinancials.R")
source("getfinancials.R")
source("getfinancials.R")
